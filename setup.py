# Setup script for the DOOMERCAT python module.
#
# Author: Malte J. Ziebarth (ziebarth@gfz-potsdam.de)
#
# Copyright (C) 2019-2022 Deutsches GeoForschungsZentrum Potsdam
#
# Licensed under the EUPL, Version 1.2 or â€“ as soon they will be approved by
# the European Commission - subsequent versions of the EUPL (the "Licence");
# You may not use this work except in compliance with the Licence.
# You may obtain a copy of the Licence at:
#
# https://joinup.ec.europa.eu/collection/eupl/eupl-text-eupl-12
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the Licence is distributed on an "AS IS" basis,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the Licence for the specific language governing permissions and
# limitations under the Licence.

# Imports:
from setuptools import setup


import os
import subprocess
from pathlib import Path
from shutil import copyfile


# Compile the C++ code:
def setup_compile() -> str:
    """
    This function can be called from the setup script to compile with
    the Meson backend.
    """
    # First setup the meson directories:
    dir_linux = 'builddir'
    dir_cross = 'builddir-mingw'
    parent = Path('.').resolve()
    dir_linux_exists = dir_cross_exists = False
    if not (parent / dir_linux).is_dir():
        cmd = ('meson', 'setup', dir_linux)
        process = subprocess.run(cmd, check=True)
    else:
        dir_linux_exists = True
    if not (parent / dir_cross).is_dir():
        cmd = ('meson','setup','--cross-file','x86_64-w64-mingw32.txt',
               dir_cross)
        process = subprocess.run(cmd, check=True)
    else:
        dir_cross_exists = True
    
    # Now compile:
    def compile():
        os.chdir(parent / dir_linux)
        cmd = ('meson','compile')
        process = subprocess.run(cmd, check=True)

        os.chdir(parent / dir_cross)
        process = subprocess.run(cmd, check=True)
    
    try:
        compile()
    except:
        # Most probably the build directory was generated by an old
        # Meson version or is otherwise corrupt.
        # Wipe the build directory and rebuild:
        raise RuntimeError()

    # Now copy the shared libraries:
    copyfile(
        parent / dir_linux / "lib_cppextensions.so",
        parent / "doomercat" / "_cppextensions.so"
    )
    copyfile(
        parent / dir_cross / "lib_cppextensions.dll",
        parent / "doomercat" / "_cppextensions.dll"
    )

    subprocess.run(("ls",str((parent / "doomercat").resolve())))

setup_compile()


# Setup:

setup(
#    name='doomercat',
#    version='1.0.0',
#    description="Data-Optimized Oblique MERCATor",
#    long_description="Algorithm and convenience class to optimize a Laborde "
#                     "oblique Mercator projection for a geospatial data set "
#                     "minimizing distortion.",
#    author_email='ziebarth@gfz-potsdam.de',
#    packages=['doomercat'],
#    py_modules=['doomercat'],
#    provides=['doomercat'],
#    package_data={'doomercat' : libname},
#    scripts=[],
#    install_requires=['numpy'],
#    license='EUPLv1.2',
)
