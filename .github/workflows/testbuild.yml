# This workflow ensures that the current version can be built under Ubuntu
# and Windows, and that the version string is correct.

name: Test build

on: [push,pull_request]

jobs:
  check_version:
    name: Check version
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.check-version.outputs.DOOMERCAT_VERSION }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Check and save version
        id: check-version
        run: |
          # Call this explicitly here:
          python check-version.py
          python check-version.py >> version.txt
          echo "DOOMERCAT_VERSION=$(cat version.txt)" >> "$GITHUB_OUTPUT"
          cat $GITHUB_OUTPUT

  build:
    needs: [check_version]
    name: Build from source
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install . --verbose
    - name: Lint with flake8
      run: |
        pip install flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pip install pytest
        # First the basic test without imported optional packages:
        pytest testing/test_import.py
        # Now run the full test suite:
        pip install pyproj
        cd testing
        pytest


  build_windows_wheel:
    needs: [build]
    name: Build wheels on windows-latest
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Build wheels
        run: |
          mkdir wheels
          pip wheel --wheel-dir wheels --verbose .

      - name: Install and test
        run: |
          pip install pytest pyproj
          pip install (Get-ChildItem -Path wheels\doomercat*.whl | Select-Object -Expand FullName)
          pytest testing/