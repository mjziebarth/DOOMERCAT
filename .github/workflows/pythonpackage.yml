name: Python package

on: [push]

jobs:
  check_version:
    name: Check version
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.check-version.outputs.DOOMERCAT_VERSION }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
      - name: Check and save version
        id: check-version
        run: |
          # Call this explicitly here:
          python check-version.py >> version.txt
          echo "DOOMERCAT_VERSION=$(cat version.txt)" >> "$GITHUB_OUTPUT"
          echo $DOOMERCAT_VERSION


  build:
    needs: [check_version]
    name: Build from source
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install . --verbose
    - name: Lint with flake8
      run: |
        pip install flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pip install pytest
        # First the basic test without imported optional packages:
        pytest testing/test_import.py
        # Now run the full test suite:
        pip install pyproj
        cd testing
        pytest

  build_python_wheel:
    needs: [check_version]
    name: Build pure Python wheel and source distribution
    runs-on: ubuntu-latest
    env:
      # This environment variable ensures that platform_tag is set to
      # None in setup.py, which will then prevent patched_bdist_wheel
      # from emposing a platform dependency.
      DOOMERCAT_PYTHON_ONLY: 1
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Build pure Python wheel and sdist
        run: |
          mkdir wheel_dist
          pip install --upgrade build
          python3 -m build --outdir wheel_dist

      - uses: actions/upload-artifact@v4
        with:
          name: doomercat-pure-python
          path: |
            ./wheel_dist/*.whl
            ./wheel_dist/*.tar.gz



  # Adapted from cibuildwheel:
  build_manylinux_wheel:
    needs: [build_python_wheel]
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install Podman
        run: |
          sudo apt-get update
          sudo apt-get -y install podman

      - name: Build wheels
        run: |
          mkdir wheels
          podman build -t doomercat-build .
          podman run --cidfile=doomercat-cid doomercat-build
          # Obtain the destined file name for the wheel:
          PLATFORM=$(head -1 Dockerfile)
          PLATFORM=${PLATFORM//FROM quay.io\/pypa\/}
          VERSION=$(cat pyproject.toml | grep "version = ")
          VERSION=${VERSION%\"}
          VERSION=${VERSION#version = \"}
          FNAME=/doomercat/doomercat-$VERSION-py3-none-$PLATFORM.whl
          podman cp $(cat doomercat-cid):$FNAME \
            wheels/

      - name: Install and test
        run: |
          pip install pytest pyproj
          pip install wheels/doomercat*.whl
          pytest testing/

      - uses: actions/upload-artifact@v4
        with:
          name: doomercat-wheel-manylinux
          path: ./wheels/*.whl

  build_windows_wheel:
    needs: [build_python_wheel]
    name: Build wheels on windows-latest
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Build wheels
        run: |
          mkdir wheels
          pip wheel --wheel-dir wheels --verbose .

      - name: Install and test
        run: |
          pip install pytest pyproj
          pip install (Get-ChildItem -Path wheels\doomercat*.whl | Select-Object -Expand FullName)
          pytest testing/

      - uses: actions/upload-artifact@v4
        with:
          name: doomercat-wheel-windows
          path: ./wheels/doomercat*.whl


  build_qgis_plugin:
    name: Build QGIS plugin
    needs: [build_manylinux_wheel, build_windows_wheel]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      # Download the manylinux and windows wheels:
      - uses: actions/download-artifact@v4

      - name: Build plugin
        run: |
          ls
          cd doomercat-wheel-manylinux
          ls
          unzip doomercat-*-manylinux*.whl
          mv doomercat/_cppextensions.so ../doomercat/
          cd ../doomercat-wheel-windows
          unzip doomercat-*-win*.whl
          mv doomercat/_cppextensions.dll ../doomercat/
          cd ..
          pip install PyQt5
          ./generate-plugin.sh --portable

      - uses: actions/upload-artifact@v4
        with:
          name: doomercat-plugin
          path: ./build/DOOMERCAT.zip


  joint_artifact:
    name: Build joint artifact.
    needs: [build_qgis_plugin,check_version]
    runs-on: ubuntu-latest
    env:
      DOOMERCAT_VERSION: ${{ needs.check_version.outputs.DOOMERCAT_VERSION }}

    steps:
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      # Download the manylinux and windows wheels:
      - uses: actions/download-artifact@v4

      - name: Create joint archive
        run: |
          echo DOOMERCAT version: $DOOMERCAT_VERSION
          mkdir doomercat-$DOOMERCAT_VERSION
          ls
          mv doomercat-plugin/DOOMERCAT.zip \
            doomercat-$DOOMERCAT_VERSION/DOOMERCAT-QGIS-$DOOMERCAT_VERSION.zip
          mv doomercat-pure-python/* doomercat-$DOOMERCAT_VERSION/
          mv doomercat-wheel-manylinux/* doomercat-$DOOMERCAT_VERSION/
          mv doomercat-wheel-windows/* doomercat-$DOOMERCAT_VERSION/
          ls doomercat-$DOOMERCAT_VERSION

      - uses: actions/upload-artifact@v4
        with:
          name: doomercat-release
          path: ./doomercat-$DOOMERCAT_VERSION