name: Python package

on: [push]

jobs:
  build:

    runs-on: ubuntu-24.04
    strategy:
      max-parallel: 4
      matrix:
        python-version: ['3.10']

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        sudo apt-get install g++-mingw-w64-x86-64-win32
        python -m pip install --upgrade pip
        pip install . --verbose
    - name: Lint with flake8
      run: |
        pip install flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pip install pytest
        # First the basic test without imported optional packages:
        pytest testing/test_import.py
        # Now run the full test suite:
        pip install pyproj
        cd testing
        pytest

  # Adapted from cibuildwheel:
  build_python_wheel:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install Podman
        run: |
          sudo apt-get update
          sudo apt-get -y install podman

      - name: Build wheels
        run: |
          mkdir wheels
          podman build -t doomercat-build .
          podman run --cidfile=doomercat-cid doomercat-build
          # Obtain the destined file name for the wheel:
          PLATFORM=$(head -1 Dockerfile)
          PLATFORM=${PLATFORM//FROM quay.io\/pypa\/}
          VERSION=$(cat pyproject.toml | grep "version = ")
          VERSION=${VERSION%\"}
          VERSION=${VERSION#version = \"}
          FNAME=/doomercat/doomercat-$VERSION-py3-none-$PLATFORM.whl
          podman cp $(cat doomercat-cid):$FNAME \
            wheels/

      - name: Install and test
        run: |
          pip install pytest pyproj
          pip install wheels/doomercat*.whl
          pytest testing/

      - uses: actions/upload-artifact@v4
        with:
          name: doomercat-wheel-manylinux
          path: ./wheels/*.whl

  build_windows_wheel:
    name: Build wheels on windows-latest
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Build wheels
        run: |
          mkdir wheels
          pip wheel --wheel-dir wheels --verbose .

      - name: Install and test
        run: |
          pip install pytest pyproj
          pip install (Get-ChildItem -Path wheels\doomercat*.whl | Select-Object -Expand FullName)
          pytest testing/

      - uses: actions/upload-artifact@v4
        with:
          name: doomercat-wheel-windows
          path: ./wheels/doomercat*.whl


  build_qgis_plugin:
    name: Build QGIS plugin
    needs: [build_python_wheel, build_windows_wheel]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      # Download the manylinux and windows wheels:
      - uses: actions/download-artifact@v4

      - name: Build plugin
        run: |
          ls
          cd doomercat-wheel-manylinux
          ls
          unzip doomercat-*-manylinux*.whl
          mv doomercat/_cppextensions.so ../doomercat/
          cd ../doomercat-wheel-windows
          unzip doomercat-*-win*.whl
          mv doomercat/_cppextensions.dll ../doomercat/
          cd ..
          ./generate-plugin.sh
